ARM GAS  /tmp/ccKwQiRE.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"esos_utils.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.__esos_set_PRNG_U32Seed,"ax",%progbits
  20              		.align	1
  21              		.global	__esos_set_PRNG_U32Seed
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	__esos_set_PRNG_U32Seed:
  27              	.LVL0:
  28              	.LFB0:
  29              		.file 1 "/home/ryan/Documents/Github/esos32/src/esos_utils.c"
   1:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** /*
   2:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * "Copyright (c) 2019 J. W. Bruce ("AUTHOR(S)")"
   3:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * All rights reserved.
   4:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * (J. W. Bruce, jwbruce_AT_tntech.edu, Tennessee Tech University)
   5:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  *
   6:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * Permission to use, copy, modify, and distribute this software and its
   7:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * documentation for any purpose, without fee, and without written agreement is
   8:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * hereby granted, provided that the above copyright notice, the following
   9:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * two paragraphs and the authors appear in all copies of this software.
  10:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  *
  11:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * IN NO EVENT SHALL THE "AUTHORS" BE LIABLE TO ANY PARTY FOR
  12:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT
  13:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF THE "AUTHORS"
  14:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  15:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  *
  16:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * THE "AUTHORS" SPECIFICALLY DISCLAIMS ANY WARRANTIES,
  17:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
  18:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * AND FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS
  19:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * ON AN "AS IS" BASIS, AND THE "AUTHORS" HAS NO OBLIGATION TO
  20:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS."
  21:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  *
  22:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * Please maintain this header in its entirety when copying/modifying
  23:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * these files.
  24:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  *
  25:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  *
  26:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  */
  27:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
  28:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** /** \file
  29:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * \brief Various hardware independent utilties for ESOS32 and its user applications
ARM GAS  /tmp/ccKwQiRE.s 			page 2


  30:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  *
  31:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  */
  32:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
  33:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
  34:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** #include    "esos.h"
  35:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** #include    "esos_utils.h"
  36:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
  37:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** // ******** G L O B A L S ***************
  38:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** uint32_t            __u32_esos_PRNG_Seed;
  39:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** uint32_t            __esos_u32FNVHash = 2166136261uL;
  40:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
  41:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** /****************************************************************
  42:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** ** F U N C T I O N S
  43:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** ****************************************************************/
  44:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
  45:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** /**
  46:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** * Writes message data to a task's mailbox.
  47:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** *
  48:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** * \param pst_RcvrTask  pointer to task structure (ESOS_TASK_HANDLE) whose mailbox will be written
  49:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** * \param pst_Msg        pointer to mailbox message structure that contains data to write to the tas
  50:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** * \note This function <em>ASSUMES</em> that there is ample free space available in specified
  51:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** * mailbox.
  52:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** *
  53:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** * \sa ESOS_TASK_WAIT_ON_TASKS_MAILBOX_HAS_SPACE
  54:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** * \hideinitializer
  55:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** */
  56:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
  57:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
  58:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** /**
  59:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * Sets the seed value in the ESOS pseudo-random number generator (PRNG).
  60:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * \note ESOS init code sets a seed value for the PRNG.  If the application
  61:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * desires a sequence that is not predictable at each execution run,
  62:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * then the seed should be set <em>ONCE</em> with some value that is
  63:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * different with each execution.  An idea is to have the user press
  64:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * a key during startup.  The value of the ESOS tick when the user presses
  65:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * the key will be different each time.  This number would make an
  66:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * ideal PRNG seed.
  67:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * \sa __esos_GetSWRNGRandomUint32
  68:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * See http://www.firstpr.com.au/dsp/rand31/  for more information
  69:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  */
  70:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** void __esos_set_PRNG_U32Seed(uint32_t u32_seed) {
  30              		.loc 1 70 49 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  71:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****    __u32_esos_PRNG_Seed = u32_seed;
  35              		.loc 1 71 4 view .LVU1
  36              		.loc 1 71 25 is_stmt 0 view .LVU2
  37 0000 014B     		ldr	r3, .L2
  38 0002 1860     		str	r0, [r3]
  72:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** } // end __esos_set_PRNG_U32Seed()
  39              		.loc 1 72 1 view .LVU3
  40 0004 7047     		bx	lr
  41              	.L3:
  42 0006 00BF     		.align	2
  43              	.L2:
ARM GAS  /tmp/ccKwQiRE.s 			page 3


  44 0008 00000000 		.word	.LANCHOR0
  45              		.cfi_endproc
  46              	.LFE0:
  48              		.section	.text.__esos_get_PRNG_RandomUint32,"ax",%progbits
  49              		.align	1
  50              		.global	__esos_get_PRNG_RandomUint32
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  55              	__esos_get_PRNG_RandomUint32:
  56              	.LFB1:
  73:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
  74:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** /**
  75:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** * Returns a 31-bit pseudo-random number generated by the Park-Miller
  76:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** * algorithm.
  77:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * \sa __esos_setSWRNGU32Seed
  78:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** * \note Visit http://www.firstpr.com.au/dsp/rand31/ for more information
  79:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** */
  80:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** uint32_t   __esos_get_PRNG_RandomUint32(void) {
  57              		.loc 1 80 47 is_stmt 1 view -0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61              		@ link register save eliminated.
  81:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   uint32_t  hi, lo;
  62              		.loc 1 81 3 view .LVU5
  82:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
  83:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   lo = 16807 * ( __u32_esos_PRNG_Seed * 0xFFFF );
  63              		.loc 1 83 3 view .LVU6
  64              		.loc 1 83 14 is_stmt 0 view .LVU7
  65 0000 0F4B     		ldr	r3, .L7
  66 0002 1B68     		ldr	r3, [r3]
  67              		.loc 1 83 6 view .LVU8
  68 0004 03EB8300 		add	r0, r3, r3, lsl #2
  69 0008 C0EB0010 		rsb	r0, r0, r0, lsl #4
  70 000c 03EB4010 		add	r0, r3, r0, lsl #5
  71 0010 C0EBC000 		rsb	r0, r0, r0, lsl #3
  72 0014 C0EB0040 		rsb	r0, r0, r0, lsl #16
  73              	.LVL1:
  84:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   hi = 16807 * ( __u32_esos_PRNG_Seed >> 16 );
  74              		.loc 1 84 3 is_stmt 1 view .LVU9
  75              		.loc 1 84 39 is_stmt 0 view .LVU10
  76 0018 1B0C     		lsrs	r3, r3, #16
  77              		.loc 1 84 6 view .LVU11
  78 001a 44F2A712 		movw	r2, #16807
  79 001e 03FB02F2 		mul	r2, r3, r2
  80              	.LVL2:
  85:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   lo += (hi & 0x7FFF) << 16;
  81              		.loc 1 85 3 is_stmt 1 view .LVU12
  82              		.loc 1 85 23 is_stmt 0 view .LVU13
  83 0022 084B     		ldr	r3, .L7+4
  84 0024 03EA0243 		and	r3, r3, r2, lsl #16
  85              		.loc 1 85 6 view .LVU14
  86 0028 1844     		add	r0, r0, r3
  87              	.LVL3:
  86:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   lo += (hi >> 15);
  88              		.loc 1 86 3 is_stmt 1 view .LVU15
ARM GAS  /tmp/ccKwQiRE.s 			page 4


  87:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   if (lo > 0x7FFFFFFF) lo -= 0x7FFFFFFF;
  89              		.loc 1 87 3 view .LVU16
  90              		.loc 1 87 6 is_stmt 0 view .LVU17
  91 002a 10EBD230 		adds	r0, r0, r2, lsr #15
  92              	.LVL4:
  93              		.loc 1 87 6 view .LVU18
  94 002e 02D4     		bmi	.L6
  95              	.LVL5:
  96              	.L5:
  88:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   return (__u32_esos_PRNG_Seed = (uint32_t) lo );
  97              		.loc 1 88 3 is_stmt 1 view .LVU19
  98              		.loc 1 88 32 is_stmt 0 view .LVU20
  99 0030 034B     		ldr	r3, .L7
 100 0032 1860     		str	r0, [r3]
  89:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** } // end __esos_get_PRNG_RandomUint32()
 101              		.loc 1 89 1 view .LVU21
 102 0034 7047     		bx	lr
 103              	.L6:
  87:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   if (lo > 0x7FFFFFFF) lo -= 0x7FFFFFFF;
 104              		.loc 1 87 24 is_stmt 1 discriminator 1 view .LVU22
  87:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   if (lo > 0x7FFFFFFF) lo -= 0x7FFFFFFF;
 105              		.loc 1 87 27 is_stmt 0 discriminator 1 view .LVU23
 106 0036 00F10040 		add	r0, r0, #-2147483648
 107              	.LVL6:
  87:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   if (lo > 0x7FFFFFFF) lo -= 0x7FFFFFFF;
 108              		.loc 1 87 27 discriminator 1 view .LVU24
 109 003a 0130     		adds	r0, r0, #1
 110              	.LVL7:
  87:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   if (lo > 0x7FFFFFFF) lo -= 0x7FFFFFFF;
 111              		.loc 1 87 27 discriminator 1 view .LVU25
 112 003c F8E7     		b	.L5
 113              	.L8:
 114 003e 00BF     		.align	2
 115              	.L7:
 116 0040 00000000 		.word	.LANCHOR0
 117 0044 0000FF7F 		.word	2147418112
 118              		.cfi_endproc
 119              	.LFE1:
 121              		.section	.text.esos_GetRandomUint32,"ax",%progbits
 122              		.align	1
 123              		.global	esos_GetRandomUint32
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 128              	esos_GetRandomUint32:
 129              	.LFB2:
  90:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
  91:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** /**
  92:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** * Returns a 32-bit pseudo-random number.  Will call a "hw" RNG
  93:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** * function to allow for HW PRNG if available.  If HW is not present,
  94:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** * the hardware specific (hwxxx or others) can simply call back to
  95:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** * the hidden ESOS function above: __esos_GetSWRNGRandomUint32 
  96:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * \sa __esos_setSWRNGU32Seed
  97:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * \sa __esos_GetSWRNGRandomUint32
  98:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** * \note Visit http://www.firstpr.com.au/dsp/rand31/ for more information
  99:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** */
 100:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** inline uint32_t    esos_GetRandomUint32(void) {
ARM GAS  /tmp/ccKwQiRE.s 			page 5


 130              		.loc 1 100 47 is_stmt 1 view -0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134 0000 08B5     		push	{r3, lr}
 135              	.LCFI0:
 136              		.cfi_def_cfa_offset 8
 137              		.cfi_offset 3, -8
 138              		.cfi_offset 14, -4
 101:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   return ( __esos_hw_PRNG_u32() );
 139              		.loc 1 101 3 view .LVU27
 140              		.loc 1 101 12 is_stmt 0 view .LVU28
 141 0002 FFF7FEFF 		bl	__esos_hw_PRNG_u32
 142              	.LVL8:
 102:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** } // end esos_getRandomUint32()
 143              		.loc 1 102 1 view .LVU29
 144 0006 08BD     		pop	{r3, pc}
 145              		.cfi_endproc
 146              	.LFE2:
 148              		.section	.text.esos_taskname_hash_u16,"ax",%progbits
 149              		.align	1
 150              		.global	esos_taskname_hash_u16
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 155              	esos_taskname_hash_u16:
 156              	.LVL9:
 157              	.LFB3:
 103:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
 104:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
 105:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** /** ********************************************************************
 106:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** *
 107:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** *
 108:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** ***********************************************************************/
 109:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** uint16_t    esos_taskname_hash_u16( void* buf, uint16_t len ) {
 158              		.loc 1 109 63 is_stmt 1 view -0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 110:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   unsigned char *bp = (unsigned char *)buf; /* start of buffer */
 163              		.loc 1 110 3 view .LVU31
 111:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   unsigned char *be = bp + len;   /* beyond end of buffer */
 164              		.loc 1 111 3 view .LVU32
 165              		.loc 1 111 18 is_stmt 0 view .LVU33
 166 0000 0144     		add	r1, r1, r0
 167              	.LVL10:
 112:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   uint32_t        u32_temp = 2166136261uL;
 168              		.loc 1 112 3 is_stmt 1 view .LVU34
 113:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
 114:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   /*
 115:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****    * FNV-1 hash each octet in the buffer
 116:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****    */
 117:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   while (bp < be) {
 169              		.loc 1 117 3 view .LVU35
 112:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   uint32_t        u32_temp = 2166136261uL;
 170              		.loc 1 112 19 is_stmt 0 view .LVU36
ARM GAS  /tmp/ccKwQiRE.s 			page 6


 171 0002 0A4A     		ldr	r2, .L14
 172              		.loc 1 117 9 view .LVU37
 173 0004 0CE0     		b	.L12
 174              	.LVL11:
 175              	.L13:
 118:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****     /* multiply by the 32 bit FNV magic prime mod 2^32 */
 119:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****     u32_temp += (u32_temp<<1) + (u32_temp<<4) + (u32_temp<<7) + (u32_temp<<8) + (u32_temp<<24);
 176              		.loc 1 119 5 is_stmt 1 view .LVU38
 177              		.loc 1 119 42 is_stmt 0 view .LVU39
 178 0006 1301     		lsls	r3, r2, #4
 179              		.loc 1 119 31 view .LVU40
 180 0008 03EB4203 		add	r3, r3, r2, lsl #1
 181              		.loc 1 119 47 view .LVU41
 182 000c 03EBC213 		add	r3, r3, r2, lsl #7
 183              		.loc 1 119 63 view .LVU42
 184 0010 03EB0223 		add	r3, r3, r2, lsl #8
 185              		.loc 1 119 79 view .LVU43
 186 0014 03EB0263 		add	r3, r3, r2, lsl #24
 187              		.loc 1 119 14 view .LVU44
 188 0018 1A44     		add	r2, r2, r3
 189              	.LVL12:
 120:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
 121:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****     /* xor the bottom with the current octet */
 122:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****     u32_temp ^= (uint32_t)*bp++;
 190              		.loc 1 122 5 is_stmt 1 view .LVU45
 191              		.loc 1 122 27 is_stmt 0 view .LVU46
 192 001a 10F8013B 		ldrb	r3, [r0], #1	@ zero_extendqisi2
 193              	.LVL13:
 194              		.loc 1 122 14 view .LVU47
 195 001e 5A40     		eors	r2, r2, r3
 196              	.LVL14:
 197              	.L12:
 117:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****     /* multiply by the 32 bit FNV magic prime mod 2^32 */
 198              		.loc 1 117 9 is_stmt 1 view .LVU48
 199 0020 8842     		cmp	r0, r1
 200 0022 F0D3     		bcc	.L13
 123:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   } // end while
 124:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   return (uint16_t) ((u32_temp >> 16) ^ (u32_temp & 0xFFFF));
 201              		.loc 1 124 3 view .LVU49
 202              		.loc 1 124 10 is_stmt 0 view .LVU50
 203 0024 82EA1242 		eor	r2, r2, r2, lsr #16
 204              	.LVL15:
 125:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** } // end esos_taskname_hash_u16
 205              		.loc 1 125 1 view .LVU51
 206 0028 90B2     		uxth	r0, r2
 207              	.LVL16:
 208              		.loc 1 125 1 view .LVU52
 209 002a 7047     		bx	lr
 210              	.L15:
 211              		.align	2
 212              	.L14:
 213 002c C59D1C81 		.word	-2128831035
 214              		.cfi_endproc
 215              	.LFE3:
 217              		.section	.text.esos_buffer_hash_u32,"ax",%progbits
 218              		.align	1
 219              		.global	esos_buffer_hash_u32
ARM GAS  /tmp/ccKwQiRE.s 			page 7


 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 224              	esos_buffer_hash_u32:
 225              	.LVL17:
 226              	.LFB4:
 126:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
 127:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
 128:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** /**
 129:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * Create a 32-bit (uint32_t) hash value for a buffer of voids
 130:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * Routine maintains "state" in the form of variable __esos_u32FNVHash
 131:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * This "state" is used in all of the ESOS FNV hash functions.
 132:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * Based on the Fowler/Noll/Vo (FNV1a) hash algorithm and code provided
 133:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * at http://www.isthe.com/chongo/tech/comp/fnv/
 134:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * \param buf pointer to a buffer of voids
 135:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * \param len length of the buffer of voids
 136:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * \retval uint32_t value of the resulting hash
 137:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  *  \sa esos_string_hash_u32
 138:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  *  \sa esos_hash_u32_to_u16
 139:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** */
 140:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** uint32_t esos_buffer_hash_u32(void *buf, uint16_t len) {
 227              		.loc 1 140 56 is_stmt 1 view -0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 141:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   unsigned char *bp = (unsigned char *)buf; /* start of buffer */
 232              		.loc 1 141 3 view .LVU54
 142:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   unsigned char *be = bp + len;           /* beyond end of buffer */
 233              		.loc 1 142 3 view .LVU55
 234              		.loc 1 142 18 is_stmt 0 view .LVU56
 235 0000 00EB010C 		add	ip, r0, r1
 236              	.LVL18:
 143:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
 144:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   /*
 145:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****    * FNV-1 hash each octet in the buffer
 146:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****    */
 147:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   while (bp < be) {
 237              		.loc 1 147 3 is_stmt 1 view .LVU57
 238              		.loc 1 147 9 is_stmt 0 view .LVU58
 239 0004 10E0     		b	.L17
 240              	.LVL19:
 241              	.L18:
 148:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
 149:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****     /* multiply by the 32 bit FNV magic prime mod 2^32 */
 150:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** #if defined(NO_FNV_GCC_OPTIMIZATION)
 151:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****     __esos_u32FNVHash *= FNV_32_PRIME;
 152:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** #else
 153:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****     __esos_u32FNVHash += (__esos_u32FNVHash<<1) + (__esos_u32FNVHash<<4) + (__esos_u32FNVHash<<7) +
 242              		.loc 1 153 5 is_stmt 1 view .LVU59
 243              		.loc 1 153 44 is_stmt 0 view .LVU60
 244 0006 0B49     		ldr	r1, .L19
 245 0008 0B68     		ldr	r3, [r1]
 246              		.loc 1 153 69 view .LVU61
 247 000a 1A01     		lsls	r2, r3, #4
 248              		.loc 1 153 49 view .LVU62
 249 000c 02EB4302 		add	r2, r2, r3, lsl #1
ARM GAS  /tmp/ccKwQiRE.s 			page 8


 250              		.loc 1 153 74 view .LVU63
 251 0010 02EBC312 		add	r2, r2, r3, lsl #7
 252              		.loc 1 153 99 view .LVU64
 253 0014 02EB0322 		add	r2, r2, r3, lsl #8
 254              		.loc 1 153 124 view .LVU65
 255 0018 02EB0362 		add	r2, r2, r3, lsl #24
 256              		.loc 1 153 23 view .LVU66
 257 001c 1344     		add	r3, r3, r2
 258 001e 0B60     		str	r3, [r1]
 154:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** #endif
 155:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
 156:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****     /* xor the bottom with the current octet */
 157:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****     __esos_u32FNVHash ^= (uint32_t)*bp++;
 259              		.loc 1 157 5 is_stmt 1 view .LVU67
 260              	.LVL20:
 261              		.loc 1 157 36 is_stmt 0 view .LVU68
 262 0020 10F8012B 		ldrb	r2, [r0], #1	@ zero_extendqisi2
 263              	.LVL21:
 264              		.loc 1 157 23 view .LVU69
 265 0024 5340     		eors	r3, r3, r2
 266 0026 0B60     		str	r3, [r1]
 267              	.L17:
 147:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
 268              		.loc 1 147 9 is_stmt 1 view .LVU70
 269 0028 6045     		cmp	r0, ip
 270 002a ECD3     		bcc	.L18
 158:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   }
 159:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
 160:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   /* return our new hash value */
 161:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   return __esos_u32FNVHash;
 271              		.loc 1 161 3 view .LVU71
 162:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** }
 272              		.loc 1 162 1 is_stmt 0 view .LVU72
 273 002c 014B     		ldr	r3, .L19
 274 002e 1868     		ldr	r0, [r3]
 275              	.LVL22:
 276              		.loc 1 162 1 view .LVU73
 277 0030 7047     		bx	lr
 278              	.L20:
 279 0032 00BF     		.align	2
 280              	.L19:
 281 0034 00000000 		.word	.LANCHOR1
 282              		.cfi_endproc
 283              	.LFE4:
 285              		.section	.text.esos_string_hash_u32,"ax",%progbits
 286              		.align	1
 287              		.global	esos_string_hash_u32
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 292              	esos_string_hash_u32:
 293              	.LVL23:
 294              	.LFB5:
 163:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
 164:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
 165:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** /**
 166:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * Create a 32-bit (uint32_t) hash value for a provided string
ARM GAS  /tmp/ccKwQiRE.s 			page 9


 167:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * Routine maintains "state" in the form of variable __esos_u32FNVHash
 168:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * This "state" is used in all of the ESOS FNV hash functions.
 169:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * Based on the Fowler/Noll/Vo (FNV1a) hash algorithm and code provided
 170:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * at http://www.isthe.com/chongo/tech/comp/fnv/
 171:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * \param psz_str pointer to zero-terminated string
 172:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  * \retval uint32_t value of the resulting hash
 173:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  *  \sa esos_string_hash_u32
 174:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****  *  \sa esos_hash_u32_to_u16
 175:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** */
 176:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** uint32_t esos_string_hash_u32(char *psz_str) {
 295              		.loc 1 176 46 is_stmt 1 view -0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              		@ link register save eliminated.
 177:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   unsigned char *ch_s = (unsigned char *)psz_str; /* unsigned string */
 300              		.loc 1 177 3 view .LVU75
 178:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
 179:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   /*
 180:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****    * FNV-1 hash each octet in the buffer
 181:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****    */
 182:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   while (*ch_s) {
 301              		.loc 1 182 3 view .LVU76
 302              		.loc 1 182 9 is_stmt 0 view .LVU77
 303 0000 10E0     		b	.L22
 304              	.LVL24:
 305              	.L23:
 183:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
 184:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****     /* multiply by the 32 bit FNV magic prime mod 2^32 */
 185:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** #if defined(NO_FNV_GCC_OPTIMIZATION)
 186:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****     __esos_u32FNVHash *= FNV_32_PRIME;
 187:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** #else
 188:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****     __esos_u32FNVHash += (__esos_u32FNVHash<<1) + (__esos_u32FNVHash<<4) + (__esos_u32FNVHash<<7) +
 306              		.loc 1 188 5 is_stmt 1 view .LVU78
 307              		.loc 1 188 44 is_stmt 0 view .LVU79
 308 0002 0B49     		ldr	r1, .L24
 309 0004 0B68     		ldr	r3, [r1]
 310              		.loc 1 188 69 view .LVU80
 311 0006 1A01     		lsls	r2, r3, #4
 312              		.loc 1 188 49 view .LVU81
 313 0008 02EB4302 		add	r2, r2, r3, lsl #1
 314              		.loc 1 188 74 view .LVU82
 315 000c 02EBC312 		add	r2, r2, r3, lsl #7
 316              		.loc 1 188 99 view .LVU83
 317 0010 02EB0322 		add	r2, r2, r3, lsl #8
 318              		.loc 1 188 124 view .LVU84
 319 0014 02EB0362 		add	r2, r2, r3, lsl #24
 320              		.loc 1 188 23 view .LVU85
 321 0018 1344     		add	r3, r3, r2
 322 001a 0B60     		str	r3, [r1]
 189:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** #endif
 190:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
 191:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****     /* xor the bottom with the current octet */
 192:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****     __esos_u32FNVHash ^= (uint32_t)*ch_s++;
 323              		.loc 1 192 5 is_stmt 1 view .LVU86
 324              	.LVL25:
 325              		.loc 1 192 36 is_stmt 0 view .LVU87
ARM GAS  /tmp/ccKwQiRE.s 			page 10


 326 001c 10F8012B 		ldrb	r2, [r0], #1	@ zero_extendqisi2
 327              	.LVL26:
 328              		.loc 1 192 23 view .LVU88
 329 0020 5340     		eors	r3, r3, r2
 330 0022 0B60     		str	r3, [r1]
 331              	.L22:
 182:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
 332              		.loc 1 182 9 is_stmt 1 view .LVU89
 182:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
 333              		.loc 1 182 10 is_stmt 0 view .LVU90
 334 0024 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 182:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
 335              		.loc 1 182 9 view .LVU91
 336 0026 002B     		cmp	r3, #0
 337 0028 EBD1     		bne	.L23
 193:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   }
 194:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
 195:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   /* return our new hash value */
 196:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   return __esos_u32FNVHash;
 338              		.loc 1 196 3 is_stmt 1 view .LVU92
 197:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** }
 339              		.loc 1 197 1 is_stmt 0 view .LVU93
 340 002a 014B     		ldr	r3, .L24
 341 002c 1868     		ldr	r0, [r3]
 342              	.LVL27:
 343              		.loc 1 197 1 view .LVU94
 344 002e 7047     		bx	lr
 345              	.L25:
 346              		.align	2
 347              	.L24:
 348 0030 00000000 		.word	.LANCHOR1
 349              		.cfi_endproc
 350              	.LFE5:
 352              		.section	.text.esos_hash_u32_to_u16,"ax",%progbits
 353              		.align	1
 354              		.global	esos_hash_u32_to_u16
 355              		.syntax unified
 356              		.thumb
 357              		.thumb_func
 359              	esos_hash_u32_to_u16:
 360              	.LVL28:
 361              	.LFB6:
 198:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** 
 199:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** inline uint16_t esos_hash_u32_to_u16(uint32_t u32_hash) {
 362              		.loc 1 199 57 is_stmt 1 view -0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366              		@ link register save eliminated.
 200:/home/ryan/Documents/Github/esos32/src/esos_utils.c ****   return  (uint16_t) ((u32_hash>>16) ^ (u32_hash&0xFFFF));
 367              		.loc 1 200 3 view .LVU96
 368              		.loc 1 200 11 is_stmt 0 view .LVU97
 369 0000 80EA1040 		eor	r0, r0, r0, lsr #16
 370              	.LVL29:
 201:/home/ryan/Documents/Github/esos32/src/esos_utils.c **** }
 371              		.loc 1 201 1 view .LVU98
 372 0004 80B2     		uxth	r0, r0
ARM GAS  /tmp/ccKwQiRE.s 			page 11


 373 0006 7047     		bx	lr
 374              		.cfi_endproc
 375              	.LFE6:
 377              		.global	__esos_u32FNVHash
 378              		.global	__u32_esos_PRNG_Seed
 379              		.section	.bss.__u32_esos_PRNG_Seed,"aw",%nobits
 380              		.align	2
 381              		.set	.LANCHOR0,. + 0
 384              	__u32_esos_PRNG_Seed:
 385 0000 00000000 		.space	4
 386              		.section	.data.__esos_u32FNVHash,"aw"
 387              		.align	2
 388              		.set	.LANCHOR1,. + 0
 391              	__esos_u32FNVHash:
 392 0000 C59D1C81 		.word	-2128831035
 393              		.text
 394              	.Letext0:
 395              		.file 2 "/home/ryan/Documents/Gitlab/embedded-systems-development-milestones/ARM/gcc-arm-none-eabi
 396              		.file 3 "/home/ryan/Documents/Gitlab/embedded-systems-development-milestones/ARM/gcc-arm-none-eabi
 397              		.file 4 "/home/ryan/Documents/Github/esos32/include/esos_utils.h"
 398              		.file 5 "/home/ryan/Documents/Github/esos32/include/esos.h"
ARM GAS  /tmp/ccKwQiRE.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 esos_utils.c
     /tmp/ccKwQiRE.s:20     .text.__esos_set_PRNG_U32Seed:0000000000000000 $t
     /tmp/ccKwQiRE.s:26     .text.__esos_set_PRNG_U32Seed:0000000000000000 __esos_set_PRNG_U32Seed
     /tmp/ccKwQiRE.s:44     .text.__esos_set_PRNG_U32Seed:0000000000000008 $d
     /tmp/ccKwQiRE.s:49     .text.__esos_get_PRNG_RandomUint32:0000000000000000 $t
     /tmp/ccKwQiRE.s:55     .text.__esos_get_PRNG_RandomUint32:0000000000000000 __esos_get_PRNG_RandomUint32
     /tmp/ccKwQiRE.s:116    .text.__esos_get_PRNG_RandomUint32:0000000000000040 $d
     /tmp/ccKwQiRE.s:122    .text.esos_GetRandomUint32:0000000000000000 $t
     /tmp/ccKwQiRE.s:128    .text.esos_GetRandomUint32:0000000000000000 esos_GetRandomUint32
     /tmp/ccKwQiRE.s:149    .text.esos_taskname_hash_u16:0000000000000000 $t
     /tmp/ccKwQiRE.s:155    .text.esos_taskname_hash_u16:0000000000000000 esos_taskname_hash_u16
     /tmp/ccKwQiRE.s:213    .text.esos_taskname_hash_u16:000000000000002c $d
     /tmp/ccKwQiRE.s:218    .text.esos_buffer_hash_u32:0000000000000000 $t
     /tmp/ccKwQiRE.s:224    .text.esos_buffer_hash_u32:0000000000000000 esos_buffer_hash_u32
     /tmp/ccKwQiRE.s:281    .text.esos_buffer_hash_u32:0000000000000034 $d
     /tmp/ccKwQiRE.s:286    .text.esos_string_hash_u32:0000000000000000 $t
     /tmp/ccKwQiRE.s:292    .text.esos_string_hash_u32:0000000000000000 esos_string_hash_u32
     /tmp/ccKwQiRE.s:348    .text.esos_string_hash_u32:0000000000000030 $d
     /tmp/ccKwQiRE.s:353    .text.esos_hash_u32_to_u16:0000000000000000 $t
     /tmp/ccKwQiRE.s:359    .text.esos_hash_u32_to_u16:0000000000000000 esos_hash_u32_to_u16
     /tmp/ccKwQiRE.s:391    .data.__esos_u32FNVHash:0000000000000000 __esos_u32FNVHash
     /tmp/ccKwQiRE.s:384    .bss.__u32_esos_PRNG_Seed:0000000000000000 __u32_esos_PRNG_Seed
     /tmp/ccKwQiRE.s:380    .bss.__u32_esos_PRNG_Seed:0000000000000000 $d
     /tmp/ccKwQiRE.s:387    .data.__esos_u32FNVHash:0000000000000000 $d

UNDEFINED SYMBOLS
__esos_hw_PRNG_u32
